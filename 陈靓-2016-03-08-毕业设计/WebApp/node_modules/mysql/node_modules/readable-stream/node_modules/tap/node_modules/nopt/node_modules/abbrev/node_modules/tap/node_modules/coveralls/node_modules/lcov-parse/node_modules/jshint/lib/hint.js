var fs = require('fs'),
    minimatch = require('minimatch'),
    path = require('path'),
    jshint = require('./../packages/jshint/jshint.js'),
    _reporter = require('./reporters/default').reporter,
    _cache = {
        directories: {}
    };

function _lint(file, results, config, data) {
    var buffer,
        globals,
        lintdata;

    // config may be a pointer, but we modify it below, which changes it the next time it is used.
    config = !config ? {} : Object.keys(config).reduce(function (obj, key) {
        obj[key] = config[key];
        return obj;
    }, {});

    try {
        buffer = fs.readFileSync(file, 'utf-8');
    } catch (e) {
        process.stdout.write("Error: Cant open: " + file);
        process.stdout.write(e + '\n');
    }

    // Remove potential Unicode Byte Order Mark.
    buffer = buffer.replace(/^\uFEFF/, '');

    // remove custom node-jshint option
    if (config.globals) {
        globals = config.globals;
        delete config.globals;
    }

    if (!jshint.JSHI